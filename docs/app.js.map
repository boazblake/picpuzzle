{"version":3,"sources":["app/initialize.js","app/model.js","app/paint.js","app/styles/FLIP.js"],"names":["log","console","m","v","getNewImage","request","method","url","mdl","imageUrl","then","imageSrc","Toolbar","showInput","view","state","attrs","onclick","onchange","e","target","value","Puzzle","src","Game","document","addEventListener","root","body","mount","WIDTH","HEIGHT","getDpr","size","window","devicePixelRatio","rand","min","max","Math","floor","random","last","xs","length","rest","head","getPosition","x","width","y","height","getRotation","getWidth","getHeight","getHue","range","Array","keys","isEmpty","saveArt","art","image","id","artworks","map","push","animateComponentEntrance","idx","transition","dom","style","opacity","setTimeout","classList","add","animateComponentExit","Promise","resolve","shapes","Model","count","preventUpdate","canvas","ctx","rotateCanvas","orientation","hsla","h","s","l","a","drawSquare","position","rotation","hue","color","save","fillStyle","translate","rotate","fillRect","restore","drawTriangle","beginPath","moveTo","lineTo","closePath","fill","createArt","shape","getShape","Paint","_","FLIP","isCreated","flip","previous","current","onbeforeupdate","children","first","oncreate","invert","play","onupdate","boundingClients","reduce","obj","it","key","getBoundingClientRect","vnode","undefined","Object","values","filter","hasOwnProperty","forEach","exit","assign","onbeforeremove","vnodeChild","call","diff","deltaY","top","deltaX","left","i","error","enter","move","enterfinish","letterKeys","letterMap","string","lm","from","item","asList","letter","delta","boundingClient1","boundingClient2","me","isDiff","toTranslate3d"],"mappings":"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","file":"docs/app.js","sourcesContent":["const log  = m => v => {\r\n  console.log(m,v)\r\n  ; return v\r\n}\r\n\r\n\r\nconst getNewImage = mdl =>\r\n  m.request({method:'GET',url:mdl.imageUrl})\r\n  .then( log('S'), log('E'))\r\n\r\nconst mdl = {\r\n  imageUrl: null, imageSrc:null\r\n}\r\n\r\nconst Toolbar = {\r\n  showInput: false,\r\n  view:({state, attrs:{mdl}}) => m('.toolbar', [\r\n    !state.showInput && m('button', {onclick: e => state.showInput = true}, 'New Image'),\r\n    state.showInput && [\r\n      m('input', {onchange: e => mdl.imageUrl= e.target.value}),\r\n      m('button', {onclick:e => {getNewImage(mdl); state.showInput = false}}, 'Get Image')\r\n    ],\r\n    m('button', {}, 'Restart')\r\n  ])\r\n}\r\n\r\nconst Puzzle = {\r\n  view:({attrs:{mdl}}) => m('.puzzle', m('img', {src:mdl.imageSrc}))\r\n}\r\n\r\n\r\nconst Game =  {\r\n  view:() => m('.container', [\r\n    m(Toolbar, {mdl}),\r\n    m(Puzzle, {mdl})\r\n  ])\r\n}\r\n\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const root = document.body\r\n  m.mount(root, Game)\r\n})\r\n","import Stream from \"mithril-stream\"\r\n\r\nconst WIDTH = Stream(600)\r\nconst HEIGHT = Stream(600)\r\n\r\nconst getDpr = (size) => size * window.devicePixelRatio || 1\r\n\r\nexport const log = (m) => (v) => {\r\n  console.log(m, v)\r\n  return v\r\n}\r\n\r\nconst rand = (min, max) => Math.floor(Math.random() * (max - min) + min)\r\nexport const last = (xs) => xs[xs.length - 1]\r\nexport const rest = ([head, ...rest]) => rest\r\n\r\nexport const getPosition = (mdl) => ({\r\n  x: rand(0, mdl.width()),\r\n  y: rand(0, mdl.height())\r\n})\r\nexport const getRotation = () => rand(0, 360)\r\nexport const getWidth = (mdl) => rand(0, mdl.width())\r\nexport const getHeight = (mdl) => rand(0, mdl.height())\r\nexport const getHue = () => rand(0, 999)\r\nexport const range = (size) => [...Array(size).keys()]\r\n\r\nexport const isEmpty = (xs) => xs.length == 0\r\n\r\nconst saveArt = (mdl, art) => {\r\n  let image = { id: mdl.artworks().length, art }\r\n  mdl.artworks.map((xs) => xs.push(image))\r\n}\r\n\r\nexport const animateComponentEntrance = (idx, transition) => ({ dom }) => {\r\n  dom.style.opacity = 0\r\n  return setTimeout(() => {\r\n    dom.classList.add(transition)\r\n    dom.style.opacity = 1\r\n  }, idx * 100 + 20)\r\n}\r\n\r\nexport const animateComponentExit = (idx, transition) => ({ dom }) => {\r\n  console.log(dom)\r\n  dom.style.opacity = 1\r\n\r\n  return new Promise(function(resolve) {\r\n    setTimeout(() => {\r\n      dom.classList.add(transition)\r\n      dom.style.opacity = 0\r\n    }, idx * 100 + 20)\r\n    dom.addEventListener(\"animationend\", resolve)\r\n  })\r\n}\r\n\r\nconst shapes = [\"circle\", \"square\", \"triangle\"]\r\n\r\nconst Model = {\r\n  count: Stream(rand(30, 70)),\r\n  preventUpdate: Stream(true),\r\n  shapes,\r\n  width: Stream(600),\r\n  height: Stream(600),\r\n  artworks: Stream([]),\r\n  canvas: Stream(null),\r\n  ctx: Stream(null),\r\n  dom: Stream(null),\r\n  rotateCanvas: Stream(0),\r\n  saveArt,\r\n  log,\r\n  orientation: \"portrait\"\r\n}\r\nexport default Model\r\n","import {\r\n  range,\r\n  getPosition,\r\n  getRotation,\r\n  getWidth,\r\n  getHeight,\r\n  getHue\r\n} from \"./model\"\r\n\r\n// hsla(hue, saturation, lightness, alpha)\r\n// hue\t0-360\r\n// saturation\t0-100%\r\n// lightness\t0-50-100%\r\n// alpha\t0.0-1.0\r\nconst hsla = (h, s, l, a) => `hsla(${h}, ${s}, ${l}, ${a})`\r\n\r\nconst drawSquare = (ctx, position, rotation, width, height, hue) => {\r\n  // console.log(\"square\", position, rotation, width, height)\r\n  const color = hsla(hue, \"60%\", \"50%\", 0.75)\r\n  ctx.save()\r\n  ctx.fillStyle = color\r\n  ctx.translate(position.x, position.y)\r\n  ctx.rotate(rotation)\r\n  ctx.fillRect(-width / 2, -height / 2, width, height)\r\n  ctx.restore()\r\n}\r\n\r\nconst drawTriangle = (ctx, position, rotation, width, height, hue) => {\r\n  // console.log(\"triangle\", position, rotation, width, height)\r\n  const color = hsla(hue, \"60%\", \"50%\", 0.75)\r\n\r\n  ctx.save()\r\n  ctx.fillStyle = color\r\n  ctx.translate(position.x, position.y)\r\n  ctx.rotate(rotation)\r\n\r\n  ctx.beginPath()\r\n  ctx.moveTo(width, 0)\r\n  ctx.lineTo(0, -width / 4)\r\n  ctx.lineTo(0, width / 4)\r\n  ctx.closePath()\r\n\r\n  ctx.fill()\r\n  ctx.restore()\r\n}\r\n\r\nconst createArt = (ctx, mdl) => (shape) => {\r\n  if (shape == \"triangle\")\r\n    return drawTriangle(\r\n      ctx,\r\n      getPosition(mdl),\r\n      getRotation(),\r\n      getWidth(mdl),\r\n      getHeight(mdl),\r\n      getHue()\r\n    )\r\n  if (shape == \"square\")\r\n    return drawSquare(\r\n      ctx,\r\n      getPosition(mdl),\r\n      getRotation(),\r\n      getWidth(mdl),\r\n      getHeight(mdl),\r\n      getHue()\r\n    )\r\n}\r\n\r\nconst getShape = (mdl) =>\r\n  mdl.shapes[Math.floor(Math.random() * mdl.shapes.length)]\r\n\r\nconst Paint = ({ ctx, mdl }) =>\r\n  range(mdl.count())\r\n    .map((_) => getShape(mdl))\r\n    .map(createArt(ctx, mdl))\r\n\r\nexport default Paint\r\n","function FLIP() {\r\n  let isCreated = false\r\n  const flip = { previous: {}, current: {} }\r\n\r\n  return {\r\n    onbeforeupdate(current, previous) {\r\n      flip.previous = { children: previous.children }\r\n      flip.current = { children: current.children }\r\n    },\r\n\r\n    view(v) {\r\n      first(v)\r\n      return v.children\r\n    },\r\n\r\n    oncreate: (v) => {\r\n      isCreated = true\r\n      flip.previous = { children: [] }\r\n      flip.current = { children: v.children }\r\n      first(v)\r\n      last()\r\n      invert()\r\n      play(v)\r\n    },\r\n\r\n    onupdate: (v) => {\r\n      last()\r\n      invert()\r\n      play(v)\r\n    }\r\n  }\r\n\r\n  function first(v) {\r\n    if (!isCreated) return\r\n\r\n    // Here we create the flip.boundingClients map by key with:\r\n    //   { <key>: {previous: {}}\r\n    //\r\n    flip.boundingClients = flip.previous.children.reduce((obj, it) => {\r\n      obj[it.key] = { previous: it.dom.getBoundingClientRect() }\r\n      obj[it.key].vnode = it\r\n\r\n      return obj\r\n    }, {})\r\n\r\n    // Now let's set current keys so we can identify removes\r\n    // it.dom is undefined on current because first() is called from view()\r\n    // Calling from view() is required so that onbeforeremove() can be assigned on removed keys\r\n    flip.current.children.reduce((obj, it) => {\r\n      // This is a new vnode, { <key>: {current: {}}\r\n      if (!obj[it.key]) {\r\n        obj[it.key] = { current: undefined }\r\n      } else {\r\n        // This is an existing { <key>: {previous: {}} that was established in first()\r\n        obj[it.key].current = undefined\r\n      }\r\n\r\n      return obj\r\n    }, flip.boundingClients)\r\n\r\n    // Here we'll handle removes.\r\n    // We need to add this in first() because onbeforeremove\r\n    // needs to be set before view() is called.\r\n    // A key with { <key>: {previous: {}} and no current attr is a remove.\r\n    Object.values(flip.boundingClients)\r\n      .filter((it) => it.previous && !it.hasOwnProperty(\"current\"))\r\n      .filter((it) => v.attrs && v.attrs.hasOwnProperty(\"exit\"))\r\n      .forEach((it) => {\r\n        const { dom } = it.vnode\r\n        const { exit } = v.attrs\r\n        it.vnode.attrs = it.vnode.attrs || {}\r\n\r\n        Object.assign(\r\n          it.vnode.attrs,\r\n          {},\r\n          {\r\n            onbeforeremove: (vnodeChild) => {\r\n              // Call the FLIP component's user defined exit() function with this child vnode.\r\n              // exit() should return a Promise which will be the returned Promise of onbeforeremove.\r\n              return exit.call(null, it.vnode, flip)\r\n            }\r\n          }\r\n        )\r\n      })\r\n  }\r\n\r\n  // Here we'll look at current and map to an existing key if existed in first():\r\n  // We'll end up with the following by key\r\n  //   { <key>: {previous: {}, current: {}}  -> move\r\n  //   { <key>: {current: {}}                -> enter\r\n  //   { <key>: {previous: {}}               -> exit\r\n  //\r\n  // This is called from the FLIP component's onupdate(), therefore current's dom nodes are now set.\r\n  function last() {\r\n    if (!flip.boundingClients || !flip.current.children) return {}\r\n\r\n    flip.current.children.reduce((obj, it) => {\r\n      obj[it.key].current = it.dom.getBoundingClientRect()\r\n      obj[it.key].vnode = it\r\n\r\n      return obj\r\n    }, flip.boundingClients)\r\n  }\r\n\r\n  function invert() {\r\n    Object.values(flip.boundingClients).forEach((it) => {\r\n      if (!it.current || !it.previous) {\r\n        it.diff = false\r\n        return\r\n      }\r\n\r\n      it.deltaY = it.previous.top - it.current.top\r\n      it.deltaX = it.previous.left - it.current.left\r\n      it.diff = !(it.deltaY === 0 && it.deltaX === 0)\r\n    })\r\n  }\r\n\r\n  function play(v) {\r\n    Object.values(flip.boundingClients).forEach((it, i) => {\r\n      if (!it.vnode) {\r\n        console.error(\"no vnode\", flip.boundingClients[i], it)\r\n        return\r\n      }\r\n\r\n      const { dom } = it.vnode\r\n      const { enter, exit, move, enterfinish } = v.attrs\r\n\r\n      if (enter && (it.current && !it.previous)) {\r\n        // Call the FLIP component's user defined enter() function with this child vnode.\r\n        enter.call(null, it.vnode, flip)\r\n      } else if (move && (it.diff && it.current && it.previous)) {\r\n        // Call the FLIP component's user defined move() function with this child vnode.\r\n        move.call(null, it.vnode, flip)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n// Convenience utility to convert a string into a list.\r\n// e.g. the string \"ABCB\" results in:\r\n// {key: \"A0\", letter: \"A\"}\r\n// {key: \"B0\", letter: \"B\"}\r\n// {key: \"C0\", letter: \"C\"}\r\n// {key: \"B1\", letter: \"B\"}\r\n// You then can use this result to create vnode children as a keyed list for animating strings.\r\nFLIP.letterKeys = function letterMap(string) {\r\n  let lm = Array.from(string).reduce(\r\n    (obj, item) => {\r\n      if (!obj[item]) {\r\n        obj[item] = { count: 0 }\r\n      } else {\r\n        obj[item].count++\r\n      }\r\n      let key = item + obj[item].count\r\n      obj.asList.push({ key: key, letter: item })\r\n      return obj\r\n    },\r\n    { asList: [] }\r\n  )\r\n\r\n  return lm.asList\r\n}\r\n\r\nFLIP.delta = function(boundingClient1, boundingClient2) {\r\n  let deltaY = boundingClient1.top - boundingClient2.top,\r\n    deltaX = boundingClient1.left - boundingClient2.left\r\n\r\n  return (function() {\r\n    let me = {\r\n      deltaY: deltaY,\r\n      deltaX: deltaX,\r\n      isDiff: !(deltaY === 0 && deltaX === 0),\r\n      toTranslate3d: () =>\r\n        \"translate3d(\" + me.deltaX + \"px, \" + me.deltaY + \"px, \" + \"0px)\"\r\n    }\r\n\r\n    return me\r\n  })()\r\n}\r\n\r\nexport default FLIP\r\n"]}